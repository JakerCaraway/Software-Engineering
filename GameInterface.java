package AntGame;
import AntGame.Player;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author oab24
 */
public class GameInterface extends javax.swing.JFrame {
    Player redPlayer;
    Player blackPlayer;

    /**
     * Creates new form GameInterface
     */
    public GameInterface() {
        initComponents();
        initialiseComponents();      
        redPlayer = null;
        blackPlayer= null;
    }
    
    private void initialiseComponents(){
        button_ChoosePlayer1Brain.setText("<html>Choose ant <br/>  brain<html>");
        button_ChoosePlayer2Brain.setText("<html>Choose ant <br/>  brain<html>");
    }

    private File getAntBrainFile(){
        //Create a file chooser
        JFileChooser fc = new JFileChooser();
        //In response to a button click:
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            return fc.getSelectedFile();
        } else {        
            return null;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_mainMenu = new javax.swing.JButton();
        panel_player1 = new javax.swing.JPanel();
        textField_PlayerRed = new javax.swing.JTextField();
        label_Player1Score = new javax.swing.JLabel();
        button_ChoosePlayer1Brain = new javax.swing.JButton();
        panel_player2 = new javax.swing.JPanel();
        textField_PlayerBlack = new javax.swing.JTextField();
        label_Player2Score = new javax.swing.JLabel();
        button_ChoosePlayer2Brain = new javax.swing.JButton();
        panel_GameDisplay = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        button_mainMenu.setText("Main Menu");
        button_mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_mainMenuActionPerformed(evt);
            }
        });

        panel_player1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Red ant Player", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        panel_player1.setName("Player 1"); // NOI18N

        label_Player1Score.setText("Score:");

        button_ChoosePlayer1Brain.setText(" ");
        button_ChoosePlayer1Brain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_ChoosePlayer1BrainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_player1Layout = new javax.swing.GroupLayout(panel_player1);
        panel_player1.setLayout(panel_player1Layout);
        panel_player1Layout.setHorizontalGroup(
            panel_player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_player1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_player1Layout.createSequentialGroup()
                        .addComponent(textField_PlayerRed)
                        .addContainerGap())
                    .addGroup(panel_player1Layout.createSequentialGroup()
                        .addComponent(label_Player1Score)
                        .addGap(0, 129, Short.MAX_VALUE))))
            .addGroup(panel_player1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(button_ChoosePlayer1Brain)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_player1Layout.setVerticalGroup(
            panel_player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_player1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textField_PlayerRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_Player1Score)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_ChoosePlayer1Brain)
                .addContainerGap())
        );

        panel_player2.setBorder(javax.swing.BorderFactory.createTitledBorder("Black ant Player"));
        panel_player2.setName("Player 1"); // NOI18N

        textField_PlayerBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_PlayerBlackActionPerformed(evt);
            }
        });

        label_Player2Score.setText("Score:");

        button_ChoosePlayer2Brain.setText(" ");
        button_ChoosePlayer2Brain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_ChoosePlayer2BrainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_player2Layout = new javax.swing.GroupLayout(panel_player2);
        panel_player2.setLayout(panel_player2Layout);
        panel_player2Layout.setHorizontalGroup(
            panel_player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_player2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_player2Layout.createSequentialGroup()
                        .addComponent(textField_PlayerBlack)
                        .addContainerGap())
                    .addGroup(panel_player2Layout.createSequentialGroup()
                        .addComponent(label_Player2Score)
                        .addGap(0, 129, Short.MAX_VALUE))))
            .addGroup(panel_player2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(button_ChoosePlayer2Brain)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_player2Layout.setVerticalGroup(
            panel_player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_player2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textField_PlayerBlack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_Player2Score)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_ChoosePlayer2Brain)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_GameDisplayLayout = new javax.swing.GroupLayout(panel_GameDisplay);
        panel_GameDisplay.setLayout(panel_GameDisplayLayout);
        panel_GameDisplayLayout.setHorizontalGroup(
            panel_GameDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );
        panel_GameDisplayLayout.setVerticalGroup(
            panel_GameDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(button_mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(34, 34, 34)
                .addComponent(panel_GameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(panel_player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(panel_player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(button_mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(panel_GameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_mainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_mainMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MainScreen.main_screen.setVisible(true);        
    }//GEN-LAST:event_button_mainMenuActionPerformed

    private void button_ChoosePlayer1BrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_ChoosePlayer1BrainActionPerformed
        // if the player already exists
        String temp = textField_PlayerRed.getText();
        if  ( (redPlayer != null) &&(redPlayer.getName().equals(textField_PlayerRed.getText())) ){
            try {
                AntBrain b= new AntBrain(getAntBrainFile());
                // check ant brain not empty
                if (b == null){
                    JOptionPane.showMessageDialog(this, "No Brain selected");
                } else {
                    redPlayer.setAntBrain(b);
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Something is wrong with the file. Could not be uploaded");
            }
        } else if (textField_PlayerRed.getText().equals("")){
            JOptionPane.showMessageDialog(this, "There is no player name for the red player, please put a name first");
        } else {
            try {
                // create ant brain
                AntBrain b = new AntBrain(getAntBrainFile());
                // check ant brain not empty 
                if (b == null){
                    JOptionPane.showMessageDialog(this, "No Brain selected");
                } else {
                    redPlayer = new Player (textField_PlayerRed.getText(),b); // player is created
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GameInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
    }//GEN-LAST:event_button_ChoosePlayer1BrainActionPerformed

    private void button_ChoosePlayer2BrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_ChoosePlayer2BrainActionPerformed
        if  ( (blackPlayer != null) &&(blackPlayer.getName().equals(textField_PlayerBlack.getText())) ){
            try {
                AntBrain b= new AntBrain(getAntBrainFile());
                // check ant brain not empty
                if (b == null){
                    JOptionPane.showMessageDialog(this, "No Brain selected");
                } else {
                    blackPlayer.setAntBrain(b);
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Something is wrong with the file. Could not be uploaded");
            }
        } else if (textField_PlayerBlack.getText().equals("")){
            JOptionPane.showMessageDialog(this, "There is no player name for the black player, please put a name first");
        } else {
            try {
                // create ant brain
                AntBrain b = new AntBrain(getAntBrainFile());
                // check ant brain not empty 
                if (b == null){
                    JOptionPane.showMessageDialog(this, "No Brain selected");
                } else {
                    blackPlayer = new Player (textField_PlayerBlack.getText(),b); // player is created
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GameInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }    
    }//GEN-LAST:event_button_ChoosePlayer2BrainActionPerformed

    private void textField_PlayerBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_PlayerBlackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField_PlayerBlackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_ChoosePlayer1Brain;
    private javax.swing.JButton button_ChoosePlayer2Brain;
    private javax.swing.JButton button_mainMenu;
    private javax.swing.JLabel label_Player1Score;
    private javax.swing.JLabel label_Player2Score;
    private javax.swing.JPanel panel_GameDisplay;
    private javax.swing.JPanel panel_player1;
    private javax.swing.JPanel panel_player2;
    private javax.swing.JTextField textField_PlayerBlack;
    private javax.swing.JTextField textField_PlayerRed;
    // End of variables declaration//GEN-END:variables
}
